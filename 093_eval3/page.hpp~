#ifndef _PAGE_HPP_
#define _PAGE_HPP_

#include <stdio.h>
#include <stdlib.h>

#include <cstdlib>
#include <cstring>
#include <exception>
#include <fstream>
#include <iostream>
#include <string>
#include <vector>
class Page {
 private:
  int pageNumber;
  std::vector<std::string> pageContent;
  std::string pagePath;
  std::vector<int> nextPage;
  std::vector<std::string> choice;
  size_t nextPageSize;
  std::string pageType;

 public:
  Page(int pageNumber, std::string pageType, std::string pagePath) {
    this->pageNumber = pageNumber;
    this->pagePath = pagePath;
    std::vector<std::string> pageContent;
    this->pageContent = pageContent;
    std::vector<int> nextPage;
    this->nextPage = nextPage;
    std::vector<std::string> choice;
    this->choice = choice;
    this->nextPageSize = 0;
    this->pageType = pageType;
  }
  void readLines(std::vector<std::string> lines, std::string path);
  Page findPageContant();
  Page addChoice();
  Page addChoice(std::string choice, int nextPage);
  Page addWorL(std::string pageType);
  int getpagenum() { return pageNumber; }
  std::vector<std::string> getPageContent() { return pageContent; }
};

void error(const std::string & errormsg);
#endif
